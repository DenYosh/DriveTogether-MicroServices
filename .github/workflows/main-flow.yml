name: Build and deliver containers

on: push

jobs:
    userservice:
        runs-on: ubuntu-latest
        name: Java 17 build, test, deliver user-service container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  cache: maven
                  distribution: adopt

            - name: Build, test and package project
              working-directory: ./user-service
              run: mvn package -B

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./user-service

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest
    vehicleservice:
        runs-on: ubuntu-latest
        name: Java 17 build, test, deliver vehicle-service container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  cache: maven
                  distribution: adopt

            - name: Build, test and package project
              working-directory: ./vehicle-service
              run: mvn package -B

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build -t ${{ secrets.DOCKER_USER }}/vehicle-service:latest ./vehicle-service

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/vehicle-service:latest
    rideservice:
        runs-on: ubuntu-latest
        name: Java 17 build, test, deliver ride-service container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  cache: maven
                  distribution: adopt

            - name: Build, test and package project
              working-directory: ./ride-service
              run: mvn package -B

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build -t ${{ secrets.DOCKER_USER }}/ride-service:latest ./ride-service

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/ride-service:latest
    bookingservice:
        runs-on: ubuntu-latest
        name: Java 17 build, test, deliver booking-service container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  cache: maven
                  distribution: adopt

            - name: Build, test and package project
              working-directory: ./booking-service
              run: mvn package -B

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build -t ${{ secrets.DOCKER_USER }}/booking-service:latest ./booking-service

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/booking-service:latest
    apigateway:
        runs-on: ubuntu-latest
        name: Java 17 build, test, deliver api-gateway container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  cache: maven
                  distribution: adopt

            - name: Build, test and package project
              working-directory: ./api-gateway
              run: mvn package -B -DskipTests

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest
    frontend:
        runs-on: ubuntu-latest
        name: Build, test, deliver frontend React app container
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "22.12.0"

            - name: Install dependencies
              working-directory: ./drivetogether-front
              run: npm install

            - name: Build React app
              working-directory: ./drivetogether-front
              run: npm run build

            - name: Docker login
              run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker Build
              run: docker build -t ${{ secrets.DOCKER_USER }}/drivetogether-frontend:latest ./drivetogether-front

            - name: Upload container to Docker Hub with Push
              run: docker push ${{ secrets.DOCKER_USER }}/drivetogether-frontend:latest
